package 박지성;
import java.util.Scanner;
import java.io.*;

public class ConvenienceStore {
	public static void main(String[] args) {
		MerchandiseSales MPrice = new  MerchandiseSales();
		MPrice.MainMenu();
		
		
		
	}

}

class MerchandiseSales {
	String [] MerchandiseArray = new String[6];
	int[] Price= new int[6];
	Scanner pencil = new Scanner(System.in);
	int coffee;
	int[] number= new int[6];
	int[] itemprice= new int[6];
	int sum=0;
	int PaymentAmount;
	int insufficient;
	int[] Stock= new int[6];
	int inventory;
	int [] TransactionPrice= new int[6];
	FileInputStream fin = null;
	FileOutputStream fout = null;
	FileWriter foutt = null;
	InputStreamReader finn = null; 
	int Test;
	int[] Storage= new int[6];
	int[] SalesQuantity= new int[6];
	int[] SalesAmount= new int[6];
	int TotalSalesAmount=0;
	
	//상품명 및 단일가
	MerchandiseSales() {
		MerchandiseArray[0] = "";
		MerchandiseArray[1] ="아메리카노"; 
		MerchandiseArray[2] ="녹차라떼";
		MerchandiseArray[3] ="아이스크림";
		MerchandiseArray[4] ="카페라떼";
		MerchandiseArray[5] ="과일주스";

		Price[0]= 0;
		Price[1]=4000;
		Price[2]=4000;
		Price[3]=3500;
		Price[4]=4500;
		Price[5]=3500;
		
		TransactionPrice[0]= 0;
		TransactionPrice[1]= 3000;
		TransactionPrice[2]= 3000;
		TransactionPrice[3]= 2500;
		TransactionPrice[4]= 3500;
		TransactionPrice[5]= 2500;
		
		/*
		try { 
			fin = new FileInputStream("MerchandiseSalesSave.txt");
			
		for(int i=0; i<Stock.length; i++)
			Stock[i]=fin.read();
		
		fin.close();
		} catch(IOException e) {
			System.out.println("MerchandiseSalesSave.txt을 불러올 수 없었습니다.경로명을 확인해 주세요");
		}
		
		//
		try { 
			fin = new FileInputStream("MerchandiseSalesSavePrice.txt");
			
		for(int i=0; i<Price.length; i++)
			Price[i]=fin.read();
		
		fin.close();
		} catch(IOException e) {
			System.out.println("MerchandiseSalesSavePrice.txt을 불러올 수 없었습니다.경로명을 확인해 주세요");
		}
		
		int i;
		try { 
			finn = new InputStreamReader(new FileInputStream("MerchandiseSalesSaveArray.txt"));
		while((i=finn.read())!=-1) {
			char c = (char)i;
			
		}
		
		
		
		} catch(IOException e) {
			System.out.println("MerchandiseSalesSaveArray.txt을 불러올 수 없었습니다.경로명을 확인해 주세요");
		}
		*/
	}
	
	//메인메뉴 (첫시작)
	public void MainMenu() {
		int Choice;
		
		do {
		System.out.println("======== 메인 메뉴 ========");
		System.out.println("1. 상품판매");
		System.out.println("2. 재고관리");
		System.out.println("3. 종료");
		System.out.println("4. 관리자 모드");
		System.out.println("=======================");
		System.out.println("어떤 업무를 하시겠습니까");
		Choice = pencil.nextInt();
		
		switch (Choice) {
		case 1 :
			Merchandise();
			break;
		case 2 :
			StockManagement();
			break;
		case 3 : 
			End();
			break;
		case 4 :
			Manager();
			break;
		default:
			System.out.println("잘못입력하셨습니다.");
		}
		}while(Choice!=3);
	}
	
	//상품판매 시작하기
	public void Merchandise() {
		String Addorder;
		do {
			MerchandiseMenu();
			Order();
			System.out.println("더 구매하시겠습니까? (예: 1/Y , 아니오: 0/N)");
			Addorder = pencil.next();
		} while(Addorder.equals("1") || Addorder.equals("Y"));
		
		ShoppingBasket();	
		OrderPrice();
		Receipt();
	
	}
	
	//상품메뉴판
	public void MerchandiseMenu() {
		System.out.println("======== 상품 메뉴 ========");
		for(int i=1; i<6; i++) {
			System.out.println(i+"."+MerchandiseArray[i]+"   "+Price[i]+"   *"+Stock[i]+"개");
			
		}
		System.out.println("=========================");
		
		}
	
	//주문받기
	public void Order() {
		do {
			System.out.println("어떤 상품을 구매하시겠습니까?");
			coffee = pencil.nextInt();
			if(coffee<1 || coffee>5) {
				System.out.println("1~5번사이로 선택해주세요");

			}
			
			else if(Stock[coffee]==0) {
				System.out.println("그 상품은 품절되었습니다.다른 상품을 선택해주세요.");
				}
		} while(coffee<1 || coffee>5 ||Stock[coffee]==0);
		
		System.out.println(MerchandiseArray[coffee]+"를 선택하셨습니다.");
		System.out.println("단가는 "+Price[coffee]+"원입니다.");
		
		do {
		System.out.println("몇 개를 구매하시겠습니까?");
		inventory = pencil.nextInt();
		if(inventory<0) {
			System.out.println("0이상의 숫자를 입력해주세요.");
		}
		if(inventory>Stock[coffee]) {
			System.out.println("그 상품의 재고가 부족합니다.개수를 다시 선택해주세요");
			}
		}while(inventory>Stock[coffee] || inventory<0);
		
		
		
		number[coffee] += inventory;
		SalesQuantity[coffee] += inventory;
		Stock[coffee] -= inventory;
		Storage[coffee] -= inventory;
		itemprice[coffee] = number[coffee] * Price[coffee];
		SalesAmount[coffee] = number[coffee] * Price[coffee];
		TotalSalesAmount += SalesAmount[coffee];
		System.out.println("결제하실 금액은"+ itemprice[coffee] + "원입니다.");
		
		
		
	}
	
	//장바구니 --- 수정해야함
	public void ShoppingBasket() {
		String Addorder;
		System.out.println("========장바구니========");
		System.out.println("품목         수량    금액");
		for(int i=1; i<6; i++) {
			if(number[i]>0) {
			System.out.printf("%s %3d %3d\n",MerchandiseArray[i],number[i],itemprice[i]);
			}
		}
		for(int i=1; i<itemprice.length; i++) { //나중에 질문하기
			sum +=itemprice[i];
		}
		System.out.println("총금액 : "+ sum + "원");
		System.out.println("취소하거나 변경할 상품이 있으십니까? (예: 1/Y , 아니오: 0/N)");
		Addorder = pencil.next();
		while(Addorder.equals("1") || Addorder.equals("Y")) {
			question : do {
				Test=0;
			System.out.println("취소하거나 변경할 상품을 선택해주세요");
			coffee = pencil.nextInt();
			
			
					
					if(number[coffee]>0) {                                         
					System.out.println(MerchandiseArray[coffee]+"를 선택하셨습니다.");
					
						do {
							System.out.println("몇개 취소하시겠습니까?");
							inventory = pencil.nextInt();
							if(inventory<0) {
								System.out.println("0이상의 숫자를 입력해주세요.");
								
							}
							if(inventory > number[coffee]) {
								System.out.println("선택한 상품의 수량이 충분하지 않습니다. 개수를 다시 선택해주세요");
						
							}
						}while(inventory > number[coffee] || inventory<0);
						
					number[coffee] -= inventory;              //주문개수
					itemprice[coffee] -= number[coffee] * Price[coffee]; //결제할 한상품의금액
					sum -=itemprice[coffee];                  //결제할 총금액
					Stock[coffee] += inventory;               //재고
					Storage[coffee] += inventory;             //창고
					SalesQuantity[coffee] -= inventory;       //누적판매수량
					SalesAmount[coffee] -= number[coffee] * Price[coffee]; //누적판매금액
					TotalSalesAmount -= SalesAmount[coffee]; //전체매출금액
					
					System.out.println(MerchandiseArray[coffee]+"상품이  "+ number[coffee] + "개로 변경되었습니다");
					
					System.out.println("장바구니를 더 이용하시겠습니까?  (예: 1/Y , 아니오: 0/N)");
					Addorder = pencil.next();
				}
					else {
						System.out.println("주문하신 상품이 아닙니다 다시 선택해주세요");
						Test=1;
						continue question;
					}
				
			}while(Addorder.equals("1") || Addorder.equals("Y") || Test == 1);
			
		}
		
		
	}
	
	//결제하기
	public void OrderPrice() {
		
		
		System.out.println("구매하신 총 금액은"+sum+"원입니다.");
		
		do {
			System.out.println("결제금액을 입금해주시기 바랍니다.");
			System.out.println("결제금액 : ");
			insufficient = pencil.nextInt();
			PaymentAmount += insufficient;
					
		if(PaymentAmount<sum) {
			System.out.println("결제금액에서 "+(sum-PaymentAmount)+"원이 부족합니다.");
			
		}
			
		} while(PaymentAmount<sum);
		
	}
	
	//영수증
	public void Receipt() {
		System.out.println("========영수증========");
		System.out.println("품목         수량    금액");
		for(int i=1; i<6; i++) {
			if(number[i]>0) {
			System.out.printf("%s %3d %3d\n",MerchandiseArray[i],number[i],itemprice[i]);
			}
		}
		System.out.println("====================");
		System.out.println("총구매금액           "+sum);
		System.out.println("받은금액              "+PaymentAmount);
		System.out.println("거스름돈              "+(PaymentAmount-sum));
		System.out.println("감사합니다~좋은 하루 되세요!");
		
		for(int i=1; i<6; i++) {
			number[i]=0;
			itemprice[i]=0;
			
		}
		sum=0;
		PaymentAmount=0;
	}
	
	//저장 및 종료
	public void End() {
		try {
		fout = new FileOutputStream("MerchandiseSalesSave.txt");
		for(int i=0; i<Stock.length; i++)
			fout.write(Stock[i]);
		fout.close();
		} catch(IOException e) {
			System.out.println("MerchandiseSalesSave.txt을 저장할 수 없었습니다.경로명을 확인해 주세요");
		}
		
		try {
			fout = new FileOutputStream("MerchandiseSalesSavePrice.txt");
			for(int i=0; i<Price.length; i++)
				fout.write(Price[i]);
			fout.close();
			} catch(IOException e) {
				System.out.println("MerchandiseSalesSavePrice.txt을 저장할 수 없었습니다.경로명을 확인해 주세요");
			}
		
		try {
			foutt = new FileWriter("MerchandiseSalesSaveArray.txt");
			for(int i=0; i<MerchandiseArray.length; i++)
				foutt.write(MerchandiseArray[i]+"\n");
				
			foutt.close();
			} catch(IOException e) {
				System.out.println("MerchandiseSalesSaveArray.txt을 저장할 수 없었습니다.경로명을 확인해 주세요");
			}
		
		
		System.out.println("저장완료했습니다.");
	}
	
	//재고관리
	public void StockManagement() {
		int Choice;
		
		do {
		System.out.println("======== 재고관리 ========");
		System.out.println("1. 재고조회");
		System.out.println("2. 상품입고");
		System.out.println("3. 상품반품");
		System.out.println("4. 이전메뉴");
		System.out.println("=======================");
		System.out.println("어떤 업무를 하시겠습니까");
		Choice = pencil.nextInt();
		
		switch (Choice) {
		case 1 :
			InventoryCheck();  //재고조회
			break;
		case 2 :
			ProductStock();   //상품입고
			break;
		case 3 : 
			ReturnOfGoods();   //상품반품
			break;
		case 4 : 
			return;   //이전메뉴
		default:
			System.out.println("잘못입력하셨습니다.");
		}
		}while(Choice!=4);
		
		
	}
	
	//재고조회
	public void InventoryCheck() {
		System.out.println("======== 재고조회 ========");
		for(int i=1; i<6; i++) {
			System.out.println(i+"."+MerchandiseArray[i]+" *"+Stock[i]+"개");
			
		}
		System.out.println("=======================");
		System.out.println("                       ");
		
		}
	
	//상품입고
	public void ProductStock() {
		int coffee;
		int inventory;
		String Addorder = null;
		
		do{
		System.out.println("입고할 제품을 선택해주세요.");
		coffee = pencil.nextInt();
		System.out.println(MerchandiseArray[coffee]+"가 선택되었습니다.추가할 개수를 선택해주세요");
		do{
			inventory = pencil.nextInt();
			if(inventory<0) { 
			System.out.println("0이상의 숫자를 입력해주세요.");
				}
		}while(inventory<0);
		Stock[coffee] += inventory;   
		Storage[coffee] += inventory;
		System.out.println(MerchandiseArray[coffee]+"에 "+inventory+"개 만큼 추가되었습니다.");
		System.out.println("다른 상품을 더 추가하시겠습니까?   (예: 1/Y , 아니오: 0/N)");
		Addorder = pencil.next();
		}while(Addorder.equals("1") || Addorder.equals("Y"));
	}
	
	//상품반품
	public void ReturnOfGoods() {
		int coffee;
		int inventory;
		String Addorder = null;
		
		do{
		System.out.println("반품할 제품을 선택해주세요.");
		coffee = pencil.nextInt();
		System.out.println(MerchandiseArray[coffee]+"가 선택되었습니다.반품할 개수를 선택해주세요");
			do {
				inventory = pencil.nextInt();
				if(inventory<0) { 
					System.out.println("0이상의 숫자를 입력해주세요.");
					
				}
				if(inventory>Stock[coffee]) {
			System.out.println("그 상품의 재고가 부족합니다.개수를 다시 선택해주세요");
				}
			}while(inventory>Stock[coffee] || inventory<0);
		Stock[coffee] -= inventory;
		System.out.println(MerchandiseArray[coffee]+"에 "+inventory+"개 만큼 반품신청이 완료되었습니다.");
		System.out.println("다른 상품을 더 반품하시겠습니까?   (예: 1/Y , 아니오: 0/N)");
		Addorder = pencil.next();
		}while(Addorder.equals("1") || Addorder.equals("Y"));
		
	}
	
	//관리자 모드
	public void Manager() {
		int Choice;
		
		do {
		System.out.println("======== 관리자 모드 ========");
		System.out.println("1. 상품조회");
		System.out.println("2. 상품변경");
		System.out.println("3. 단가변경");
		System.out.println("4. 매출실적현황");
		System.out.println("5. 이전메뉴");
		System.out.println("=========================");
		System.out.println("어떤 업무를 하시겠습니까");
		Choice = pencil.nextInt();
		
		switch (Choice) {
		case 1 :
			ProductCheck();   //상품조회
			break;
		case 2 :
			ProductChange();  //상품변경
			break;
		case 3 : 
			PriceChange();  //단가변경
			break;
		case 4 :
			SalesPerformanceStatus();  //매출실적현황
			break;
		case 5 :
			return;   //이전메뉴
			
		default:
			System.out.println("잘못입력하셨습니다.");
		}
		}while(Choice!=5);
		
	}
	
	//상품조회
	public void ProductCheck() {
		System.out.println("======== 상품조회 ========");
		for(int i=1; i<6; i++) {
			System.out.println(i+"."+MerchandiseArray[i]+"   "+Price[i]+"원");
			
		}
		System.out.println("=======================");
		System.out.println("                       ");
		
	}
	
	//상품변경
	public void ProductChange() {
		int coffee;
		String change;
		String Addorder;
		do {
		System.out.println("변경할 상품을 선택해주세요.");
		coffee = pencil.nextInt();
		System.out.println(MerchandiseArray[coffee]+"가 선택되었습니다. 무엇으로 변경할지 입력해주세요");
		change = pencil.next();
		MerchandiseArray[coffee]=change;
		System.out.println(MerchandiseArray[coffee]+"로 변경되었습니다.");
		System.out.println("더 이용하시겠습니까? (예: 1/Y , 아니오: 0/N)");
		Addorder = pencil.next();
		} while(Addorder.equals("1") || Addorder.equals("Y"));
		
	}
	
	//단가변경
	public void PriceChange() {
		int coffee;
		int change;
		String Addorder;
		System.out.println("상품명         판매단가");
		for(int i=1; i<6; i++) {
			System.out.println(i+"."+MerchandiseArray[i]+"  "+Price[i]+"원");
		}
		do {
		System.out.println("가격을 변경할 상품을 선택해주세요.");
		coffee = pencil.nextInt();
		System.out.println(MerchandiseArray[coffee]+"가 선택되었습니다. 얼마로 변경할지 입력해주세요");
		do {
			change = pencil.nextInt();
			if(change<0) {  
				System.out.println("0이상의 숫자를 입력해주세요.");
				}
		}while(change<0);
		Price[coffee]=change;
		System.out.println(MerchandiseArray[coffee]+"의 가격이" +Price[coffee]+ "원으로 변경되었습니다.");
		System.out.println("더 이용하시겠습니까? (예: 1/Y , 아니오: 0/N)");
		Addorder = pencil.next();
		} while(Addorder.equals("1") || Addorder.equals("Y"));
		
		
	}
	
	//매출실적현황
	public void SalesPerformanceStatus() {
		int Choice;
		
		do {
		System.out.println("======= 매출실적현황 =======");
		System.out.println("1. 매출현황조회");
		System.out.println("2. 주문상품조회");
		System.out.println("3. 거래처현황");
		System.out.println("4. 이전메뉴");
		System.out.println("========================");
		System.out.println("어떤 업무를 하시겠습니까");
		Choice = pencil.nextInt();
		
		switch (Choice) {
		case 1 :
			SalesStatus();  //매출현황조회
			break;
		case 2 :
			GoodsOrdered();   //주문상품조회
			break;
		case 3 : 
			CustomerStatus();   //거래처현황
			break;
		case 4 : 
			return;   //이전메뉴
		default:
			System.out.println("잘못입력하셨습니다.");
		}
		}while(Choice!=4);
		
		
	}
	
	//매출현황조회 
	public void SalesStatus() {
		
		System.out.println("품목         누적판매수량    누적판매금액 ");
		for(int i=1; i<6; i++) {
			System.out.printf("%s %3d %9d\n",MerchandiseArray[i],SalesQuantity[i],SalesAmount[i]); 
			}
		System.out.println("전체매출금액: "+TotalSalesAmount+"원");
	}
	
	//주문상품조회
	public void GoodsOrdered() {
		Test=1;
	
		for(int i=1; i<Stock.length; i++) {
			if(Stock[i]<=3) {
				Test=0;
			}

		}
		if(Test==0) {
			System.out.println("주문해야할 상품 목록입니다.");
				
			for(int i=1; i<Stock.length; i++) {
				if(Stock[i]<=3) {
					System.out.println(MerchandiseArray[i] + " *" + Stock[i]+"개 남아있습니다.");
					}
				}
		}
		else if(Test==1){
			System.out.println("상품의 재고가 충분히 있습니다.");
		}
		
	}
	
	//거래처현황
	public void CustomerStatus() {
		
		int Choice;
		
		do {
		System.out.println("======= 거래처현황 =======");
		System.out.println("1. 거래품목 현황조회");
		System.out.println("2. 거래품목 입고 현황조회");
		System.out.println("3. 거래단가 변경");
		System.out.println("4. 이전메뉴");
		System.out.println("========================");
		System.out.println("어떤 업무를 하시겠습니까");
		Choice = pencil.nextInt();
		
		switch (Choice) {
		case 1 :
			TransactionItemStatus();  //거래품목 현황조회
			break;
		case 2 :
			TransactionItemReceivingStatus();   //거래품목 입고 현황조회
			break;
		case 3 : 
			TransactionPriceChange();   //거래단가 변경
			break;
		case 4 : 
			return;   //이전메뉴
		default:
			System.out.println("잘못입력하셨습니다.");
		}
		}while(Choice!=4);
		
		
	}
	
	//거래품목 현황조회
	public void TransactionItemStatus() {
		System.out.println("상품명       판매단가     거래단가");
		for(int i=1; i<6; i++) {
			System.out.println(MerchandiseArray[i]+"  "+Price[i]+"원     "+TransactionPrice[i]+"원");
		}
		
	}
	
	//거래품목 입고 현황조회
	public void TransactionItemReceivingStatus() {
		System.out.println("상품명         총입고수량     제품별결제 금액");
		for(int i=1; i<Storage.length; i++) {
				 System.out.println(MerchandiseArray[i]+"       "+Storage[i]+"개     "+Price[i]*Storage[i]+"원");
				}
		}
	
	//거래단가 변경
	public void TransactionPriceChange() {
		int coffee;
		int change;
		String Addorder;
		System.out.println("상품명         거래단가");
		for(int i=1; i<6; i++) {
			System.out.println(i+"."+MerchandiseArray[i]+"  "+TransactionPrice[i]+"원");
		}
		do {
		System.out.println("가격을 변경할 상품을 선택해주세요.");
		coffee = pencil.nextInt();
		System.out.println(MerchandiseArray[coffee]+"가 선택되었습니다. 얼마로 변경할지 입력해주세요");
		do {
		change = pencil.nextInt();
		if(change<0) {  
			System.out.println("0이상의 숫자를 입력해주세요.");
			
			}
		}while(change<0);
		TransactionPrice[coffee]=change;
		System.out.println(MerchandiseArray[coffee]+"의 가격이" +TransactionPrice[coffee]+ "원으로 변경되었습니다.");
		System.out.println("판매단가는 얼마로 변경할지 입력해주세요");
		do {
		change = pencil.nextInt();
		if(change<0) {  
			System.out.println("0이상의 숫자를 입력해주세요.");
			}
		if(TransactionPrice[coffee]>change) {
			System.out.println("거래단가와 같거나 더 높은 숫자를 입력해주세요.");
			}
		}while(change<0 || TransactionPrice[coffee]>change);
		Price[coffee]=change;
		System.out.println("더 이용하시겠습니까? (예: 1/Y , 아니오: 0/N)");
		Addorder = pencil.next();
		} while(Addorder.equals("1") || Addorder.equals("Y"));

		
	}
	
}


